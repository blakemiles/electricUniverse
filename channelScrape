import os
import googleapiclient.discovery
from googleapiclient.errors import HttpError

# Set up the YouTube Data API client
api_service_name = "youtube"
api_version = "v3"
developer_key = "AIzaSyBKVzoAJmjkMQUUud0BgYb6yDS4AaEh-N8"  # Replace with your API key

youtube = googleapiclient.discovery.build(api_service_name, api_version, developerKey=developer_key)

def get_channel_videos(channel_id):
    # Retrieve the video IDs of all videos in a YouTube channel
    video_ids = []
    next_page_token = None

    while True:
        try:
            request = youtube.search().list(
                part="id",
                channelId=channel_id,
                maxResults=50,
                order="date",
                pageToken=next_page_token
            )
            response = request.execute()

            for item in response["items"]:
                video_ids.append(item["id"]["videoId"])

            next_page_token = response.get("nextPageToken")

            if not next_page_token:
                break

        except HttpError as e:
            print(f"An HTTP error occurred: {e}")
            break

    return video_ids

def download_captions(video_id):
    # Download the closed captions for a given video
    try:
        request = youtube.captions().list(
            part="snippet",
            videoId=video_id
        )
        response = request.execute()

        for item in response["items"]:
            if item["snippet"]["trackKind"] == "standard":
                caption_id = item["id"]
                caption_response = youtube.captions().download(
                    id=caption_id,
                    tfmt="srt"
                ).execute()

                caption_content = caption_response.decode("utf-8")

                # Save the caption_content to a file or process it as needed
                filename = f"{video_id}_caption.srt"
                with open(filename, "w", encoding="utf-8") as file:
                    file.write(caption_content)

                print(f"Closed caption for video {video_id} downloaded.")

    except HttpError as e:
        print(f"An HTTP error occurred: {e}")

# Replace "YOUR_CHANNEL_ID" with the ID of the YouTube channel you want to scrape
channel_id = "UCvHqXK_Hz79tjqRosK4tWYA"

# Get the video IDs of the channel's videos
videos = get_channel_videos(channel_id)

# Download the closed captions for each video
for video_id in videos:
    download_captions(video_id)
